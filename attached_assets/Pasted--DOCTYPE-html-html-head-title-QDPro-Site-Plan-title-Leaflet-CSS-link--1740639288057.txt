<!DOCTYPE html>
<html>
<head>
    <title>QDPro Site Plan</title>
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <!-- Leaflet Draw CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css"/>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
    <!-- Custom Styles -->
    <link rel="stylesheet" href="/static/css/ui-controls.css" />
    <link rel="stylesheet" href="/static/css/site-plan.css" />
    
    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <!-- Leaflet Draw JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <!-- Custom Scripts -->
    <script src="/static/js/ui-controls.js"></script>
    <script src="/static/js/site-plan.js"></script>
</head>
<body>
    <div class="ui-container">
        <!-- Top Navigation Bar -->
        <nav class="menu-bar">
            <div class="menu-item">File
                <div class="dropdown-content">
                    <a href="#" id="new-project-btn">New Project</a>
                    <a href="#" id="open-project-btn">Open Project</a>
                    <a href="#" id="save-project-btn">Save Project</a>
                    <a href="#" id="export-project-btn">Export</a>
                </div>
            </div>
            <div class="menu-item">Edit
                <div class="dropdown-content">
                    <a href="#" id="undo-btn">Undo</a>
                    <a href="#" id="redo-btn">Redo</a>
                    <a href="#" id="delete-selected-btn">Delete Selected</a>
                </div>
            </div>
            <div class="menu-item">View
                <div class="dropdown-content">
                    <a href="#" id="zoom-in-btn">Zoom In</a>
                    <a href="#" id="zoom-out-btn">Zoom Out</a>
                    <a href="#" id="toggle-layers-btn">Toggle Layers Panel</a>
                </div>
            </div>
            <div class="menu-item">Analysis
                <div class="dropdown-content">
                    <a href="#" id="run-qd-analysis-btn">Run QD Analysis</a>
                    <a href="#" id="generate-report-btn">Generate Report</a>
                </div>
            </div>
        </nav>

        <!-- Toolbar -->
        <div class="toolbar">
            <button id="draw-polygon-btn" class="tool-button"><i class="fas fa-draw-polygon"></i> Polygon</button>
            <button id="draw-rectangle-btn" class="tool-button"><i class="fas fa-square"></i> Rectangle</button>
            <button id="draw-marker-btn" class="tool-button"><i class="fas fa-map-marker-alt"></i> Marker</button>
            <button id="edit-layer-btn" class="tool-button"><i class="fas fa-edit"></i> Edit</button>
            <button id="delete-layer-btn" class="tool-button"><i class="fas fa-trash"></i> Delete</button>
        </div>

        <!-- Content Area -->
        <div class="content-area">
            <!-- Layers Panel -->
            <div id="layers-panel" class="layers-panel">
                <h3>Layers</h3>
                <button id="add-new-layer" class="tool-button"><i class="fas fa-plus"></i> Add Layer</button>
                <ul class="layers-list"></ul>
            </div>

            <!-- Map Container -->
            <div class="map-container">
                <div id="map" style="width: 100%; height: 100%;"></div>
            </div>
        </div>
    </div>

    <!-- JavaScript for UI Controls -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toolButtons = {
                polygon: document.getElementById("draw-polygon-btn"),
                rectangle: document.getElementById("draw-rectangle-btn"),
                marker: document.getElementById("draw-marker-btn"),
            };
            
            let activeDrawHandler = null;
            let activeTool = null;

            function disableAllTools() {
                Object.values(toolButtons).forEach((btn) => btn.classList.remove("active"));
                if (activeDrawHandler) {
                    activeDrawHandler.disable();
                    activeDrawHandler = null;
                }
                activeTool = null;
            }

            function toggleDrawing(toolType) {
                if (activeTool === toolType) {
                    disableAllTools();
                    return;
                }
                disableAllTools();
                toolButtons[toolType]?.classList.add("active");
                activeTool = toolType;
                
                switch (toolType) {
                    case "polygon":
                        activeDrawHandler = new L.Draw.Polygon(window.map, { shapeOptions: { color: "#662d91" } });
                        break;
                    case "rectangle":
                        activeDrawHandler = new L.Draw.Rectangle(window.map, { shapeOptions: { color: "#228B22" } });
                        break;
                    case "marker":
                        activeDrawHandler = new L.Draw.Marker(window.map);
                        break;
                }
                
                if (activeDrawHandler) {
                    activeDrawHandler.enable();
                }
            }
            
            Object.keys(toolButtons).forEach((toolType) => {
                if (toolButtons[toolType]) {
                    toolButtons[toolType].addEventListener("click", function () {
                        toggleDrawing(toolType);
                    });
                }
            });
        });
    </script>
</body>
</html>
