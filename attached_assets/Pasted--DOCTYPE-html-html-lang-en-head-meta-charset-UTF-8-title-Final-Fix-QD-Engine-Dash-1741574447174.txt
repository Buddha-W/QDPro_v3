<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Final Fix - QD Engine Dashboard</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    #map { height: 600px; width: 100%; }
  </style>
  <!-- Load Leaflet with defer -->
  <script src="https://unpkg.com/leaflet/dist/leaflet.js" defer></script>
  <!-- Define global function with defer so it's ready before body scripts run -->
  <script defer>
    // Attach function to window for global access
    window.openFeatureEditor = function(layerData) {
      console.log("openFeatureEditor called with:", layerData);
      if (!layerData || !layerData.name) {
        console.error("Invalid layer data:", layerData);
        return;
      }
      alert("Editing polygon: " + layerData.name);
    };
    console.log("Global openFeatureEditor is defined:", window.openFeatureEditor);
  </script>
</head>
<body>
  <h1>Final Fix - QD Engine Dashboard</h1>
  <!-- Map container -->
  <div id="map"></div>
  <!-- Test inline button to call the function directly -->
  <button id="testInlineButton">Test Inline Edit</button>
  <!-- Main script -->
  <script defer>
    // Clear localStorage to avoid cached project data issues
    localStorage.clear();

    // Global map variable
    let map;

    // Initialize the map
    function initMap() {
      map = L.map("map").setView([40.7128, -74.0060], 5);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "&copy; OpenStreetMap contributors"
      }).addTo(map);
    }
    initMap();

    // Sample project data to simulate saved data
    const sampleProjectData = {
      layers: [
        {
          name: "Polygon A",
          coordinates: [
            [40.7128, -74.0060],
            [40.7228, -74.0160],
            [40.7328, -74.0060]
          ]
        }
      ]
    };
    localStorage.setItem("savedProject", JSON.stringify(sampleProjectData));

    // Remove only polygon layers (but keep the base tile layer)
    function clearLayers() {
      if (!map) {
        console.error("Map is not initialized.");
        return;
      }
      map.eachLayer(layer => {
        if (layer instanceof L.Polygon) {
          map.removeLayer(layer);
        }
      });
    }

    // Load project data and attach click events to polygons
    function loadProject() {
      clearLayers();
      const projectData = JSON.parse(localStorage.getItem("savedProject"));
      if (!projectData || !projectData.layers) {
        console.error("No project data found.");
        return;
      }
      projectData.layers.forEach(layerData => {
        const polygonLayer = L.polygon(layerData.coordinates).addTo(map);
        // Attach the click event that calls the global function
        polygonLayer.on("click", () => {
          window.openFeatureEditor(layerData);
        });
      });
      console.log("Project loaded successfully.");
    }
    loadProject();

    // Test inline button: triggers the global function when clicked
    document.getElementById("testInlineButton").addEventListener("click", function() {
      window.openFeatureEditor({ name: "Inline Test Polygon" });
    });
  </script>
</body>
</html>
